import u from"node:crypto";import{derToJose as B,joseToDer as J}from"ecdsa-sig-formatter";var m=["HS256","HS384","HS512","RS256","RS384","RS512"];function T(n){return m.includes(n)}var p={HS256:g(256),HS384:g(384),HS512:g(512),RS256:c(256),RS384:c(384),RS512:c(512),ES256:H(256)};function g(n){function r(s,t){return u.createHmac(`sha${n}`,t).update(s).digest("base64")}function e(s,t,i){return r(s,i)===t}return{sign:r,verify:e}}function c(n){let r=`RSA-SHA${n}`;function e(t,i){return u.createSign(r).update(t).sign(i.toString(),"base64")}function s(t,i,a){let o=u.createVerify(r);return o.update(t),o.verify(a,i,"base64")}return{sign:e,verify:s}}function H(n){let r=`RSA-SHA${n}`;function e(t,i){let a=u.createSign(r).update(t).sign({key:i.toString()},"base64");return B(a,`ES${n}`)}function s(t,i,a){i=J(i,`ES${n}`).toString("base64");let o=u.createVerify(r);return o.update(t),o.verify(a,i,"base64")}return{sign:e,verify:s}}function l(n){let r=JSON.stringify(n);return S(Buffer.from(r).toString("base64"))}function b(n){let r=Buffer.from(d(n),"base64").toString("utf-8");try{return JSON.parse(r)}catch(e){return console.warn("Failed to parse JSON",r,e),r}}function S(n){return n.replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function d(n){n=n.toString();let r=4-n.length%4;if(r!==4)for(let e=0;e<r;e++)n+="=";return n.replace(/\-/g,"+").replace(/_/g,"/")}function A(n,r,e="HS256"){if(!T(e))throw new Error(`${e} is an invalid algorithm type. Must be one of ${m}`);let s=l({alg:e,type:"JWT"}),t=l(n),i=`${s}.${t}`,a=p[e],o=S(a.sign(i,r));return`${i}.${o}`}function y(n){let r=n.split(".");if(r.length!==3)throw new Error(`Decode expected 3 parts to encoded token, got ${r.length}`);let e=b(r[0]),s=b(r[1]),t=Buffer.from(d(r[2]),"base64");return{header:e,payload:s,signature:t}}function $(n,r,e={}){let s=y(n),{payload:t}=s,i=n.split("."),a=e.alg??s.header.alg??"HS256",o=Date.now(),h=p[a],f={decoded:s};return f.sig=h.verify(`${i[0]}.${i[1]}`,d(i[2]),r),t.exp!==void 0&&(f.exp=t.exp<o),t.nbf!==void 0&&(f.nbf=o>=t.nbf),e.iat!==void 0&&(f.iat=t.iat===e.iat),e.iss!==void 0&&(f.iss=t.iss===e.iss),e.jti!==void 0&&(f.jti=t.jti!==e.jti),e.sub!==void 0&&(f.sub=t.sub===e.sub),e.aud!==void 0&&(f.aud=t.aud===e.aud),f}var v={encode:A,decode:y,verify:$};export{v as jwt};
